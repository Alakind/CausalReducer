<transitionsystem>
<state id="0" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<state id="1" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="0" destination="1"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="2" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="1" destination="2"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="3" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="2" destination="3"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="4" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="3" destination="4"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="5" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="4" destination="5"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<state id="6" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="5" destination="6"> <messageserver sender="train1" owner="theController" title="ARRIVE"/></transition>
<state id="7" atomicpropositions="train1OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="6" destination="7"> <messageserver sender="theController" owner="train1" title="YOUMAYPASS"/></transition>
<state id="8" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="7" destination="8"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="9" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="8" destination="9"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="10" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="9" destination="10"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<state id="11" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="10" destination="11"> <messageserver sender="train2" owner="theController" title="ARRIVE"/></transition>
<state id="12" atomicpropositions="train2OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="11" destination="12"> <messageserver sender="theController" owner="train2" title="YOUMAYPASS"/></transition>
<transition source="12" destination="3"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="13" atomicpropositions="train2OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="12" destination="13"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<state id="14" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="13" destination="14"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<transition source="14" destination="5"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="15" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="14" destination="15"> <messageserver sender="train1" owner="theController" title="ARRIVE"/></transition>
<state id="16" atomicpropositions="train1OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="15" destination="16"> <messageserver sender="theController" owner="train1" title="YOUMAYPASS"/></transition>
<state id="17" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train1">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="16" destination="17"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="18" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="17" destination="18"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="19" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="18" destination="19"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="20" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="19" destination="20"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<state id="21" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="20" destination="21"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<state id="22" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="21" destination="22"> <messageserver sender="train1" owner="theController" title="ARRIVE"/></transition>
<state id="23" atomicpropositions="train1OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="22" destination="23"> <messageserver sender="theController" owner="train1" title="YOUMAYPASS"/></transition>
<state id="24" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="23" destination="24"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<transition source="24" destination="10"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="25" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="24" destination="25"> <messageserver sender="train2" owner="theController" title="ARRIVE"/></transition>
<transition source="25" destination="11"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="26" atomicpropositions="train2OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="25" destination="26"> <messageserver sender="theController" owner="train2" title="YOUMAYPASS"/></transition>
<transition source="26" destination="12"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="27" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train2">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="26" destination="27"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="28" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train2">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="27" destination="28"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="29" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train2">Leave()</message>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="28" destination="29"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="30" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train1">Arrive()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="29" destination="30"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="30" destination="21"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<state id="31" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="28" destination="31"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="31" destination="30"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="32" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="31" destination="32"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="32" destination="21"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="33" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="32" destination="33"> <messageserver sender="train1" owner="theController" title="ARRIVE"/></transition>
<state id="34" atomicpropositions="train1OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="33" destination="34"> <messageserver sender="theController" owner="train1" title="YOUMAYPASS"/></transition>
<state id="35" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="34" destination="35"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="36" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="35" destination="36"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<transition source="36" destination="20"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<transition source="36" destination="32"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<state id="37" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="35" destination="37"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="38" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="37" destination="38"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="39" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="38" destination="39"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<state id="40" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="39" destination="40"> <messageserver sender="train2" owner="theController" title="ARRIVE"/></transition>
<transition source="40" destination="13"> <messageserver sender="theController" owner="train2" title="YOUMAYPASS"/></transition>
<state id="41" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="40" destination="41"> <messageserver sender="train1" owner="theController" title="ARRIVE"/></transition>
<state id="42" atomicpropositions="train1OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="41" destination="42"> <messageserver sender="theController" owner="train1" title="YOUMAYPASS"/></transition>
<transition source="42" destination="25"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="43" atomicpropositions="train1OnBridge,train2OnBridge,hazBothOnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="42" destination="43"> <messageserver sender="theController" owner="train2" title="YOUMAYPASS"/></transition>
<transition source="43" destination="26"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<transition source="43" destination="16"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="44" atomicpropositions="train2OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="41" destination="44"> <messageserver sender="theController" owner="train2" title="YOUMAYPASS"/></transition>
<transition source="44" destination="43"> <messageserver sender="theController" owner="train1" title="YOUMAYPASS"/></transition>
<transition source="44" destination="15"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="45" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="37" destination="45"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="45" destination="39"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="46" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="45" destination="46"> <messageserver sender="train2" owner="theController" title="ARRIVE"/></transition>
<transition source="46" destination="40"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="47" atomicpropositions="train2OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="46" destination="47"> <messageserver sender="theController" owner="train2" title="YOUMAYPASS"/></transition>
<transition source="47" destination="13"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="48" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="47" destination="48"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<transition source="48" destination="31"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<state id="49" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="48" destination="49"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="50" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="49" destination="50"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<transition source="50" destination="39"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="49" destination="45"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<state id="51" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="48" destination="51"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="51" destination="32"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<transition source="51" destination="45"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<transition source="35" destination="51"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="34" destination="23"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<transition source="33" destination="22"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="52" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="27" destination="52"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="53" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Leave()</message>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="52" destination="53"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<transition source="53" destination="50"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="52" destination="49"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="27" destination="48"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="26" destination="47"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="25" destination="46"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="23" destination="42"> <messageserver sender="train2" owner="theController" title="ARRIVE"/></transition>
<transition source="22" destination="41"> <messageserver sender="train2" owner="theController" title="ARRIVE"/></transition>
<transition source="18" destination="36"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<state id="54" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train1">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="17" destination="54"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<state id="55" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train1">Leave()</message>
			<message sender="train2">Arrive()</message>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="54" destination="55"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<transition source="55" destination="38"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="54" destination="37"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="17" destination="35"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="16" destination="7"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<transition source="16" destination="34"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="15" destination="6"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<transition source="15" destination="33"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="13" destination="44"> <messageserver sender="train1" owner="theController" title="ARRIVE"/></transition>
<transition source="11" destination="40"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="8" destination="24"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="7" destination="23"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="6" destination="22"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="3" destination="14"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<state id="56" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="2" destination="56"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="56" destination="14"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="57" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="56" destination="57"> <messageserver sender="train1" owner="theController" title="ARRIVE"/></transition>
<state id="58" atomicpropositions="train1OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="57" destination="58"> <messageserver sender="theController" owner="train1" title="YOUMAYPASS"/></transition>
<transition source="58" destination="1"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<transition source="58" destination="16"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<transition source="57" destination="15"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<transition source="1" destination="27"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="59" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="1" destination="59"> <messageserver sender="train1" owner="theController" title="LEAVE"/></transition>
<transition source="59" destination="56"> <messageserver sender="train1" owner="train1" title="REACHBRIDGE"/></transition>
<transition source="59" destination="48"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="60" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
		</queue>
	</rebec>
</state>
<transition source="0" destination="60"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<transition source="60" destination="17"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="61" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Leave()</message>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="60" destination="61"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
<transition source="61" destination="8"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="62" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">Arrive()</message>
		</queue>
	</rebec>
</state>
<transition source="61" destination="62"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="62" destination="24"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="63" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="theController">YouMayPass()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="62" destination="63"> <messageserver sender="train2" owner="theController" title="ARRIVE"/></transition>
<transition source="63" destination="25"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<state id="64" atomicpropositions="train2OnBridge," >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">true</variable>
		</statevariables>
		<queue>
			<message sender="train2">Passed()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="63" destination="64"> <messageserver sender="theController" owner="train2" title="YOUMAYPASS"/></transition>
<transition source="64" destination="26"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<transition source="64" destination="60"> <messageserver sender="train2" owner="train2" title="PASSED"/></transition>
<state id="65" atomicpropositions="" >
	<rebec name="train1">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train1">Passed()</message>
		</queue>
	</rebec>
	<rebec name="train2">
		<statevariables>
			<variable name="Train.onTheBridge" type="boolean">false</variable>
		</statevariables>
		<queue>
			<message sender="train2">ReachBridge()</message>
		</queue>
	</rebec>
	<rebec name="theController">
		<statevariables>
			<variable name="BridgeController.isWaiting1" type="boolean">false</variable>
			<variable name="BridgeController.isWaiting2" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge1" type="boolean">false</variable>
			<variable name="BridgeController.isOnBridge2" type="boolean">false</variable>
		</statevariables>
		<queue>
		</queue>
	</rebec>
</state>
<transition source="60" destination="65"> <messageserver sender="train2" owner="theController" title="LEAVE"/></transition>
<transition source="65" destination="35"> <messageserver sender="train1" owner="train1" title="PASSED"/></transition>
<transition source="65" destination="62"> <messageserver sender="train2" owner="train2" title="REACHBRIDGE"/></transition>
</transitionsystem>
